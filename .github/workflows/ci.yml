name: CI

on:
  release:
    types: [created]
  push:
  schedule:
    - cron: '00 01 * * *'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - uses: actions-rs/toolchain@v1
        with:
          components: rustfmt, clippy
          toolchain: stable

      - name: Lint with rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt

      - name: Lint with clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features

      - name: Test with cargo
        uses: actions-rs/cargo@v1.0.1
        with:
          command: test

  build:
    runs-on: ${{ matrix.os }}
    needs: lint
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - uses: messense/maturin-action@v1
        with:
          maturin-version: latest
          command: build
          args: --release

  rust-publish:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Publish on crates.io
        run: |
          cargo login ${{ secrets.CRATES_TOKEN }}
          cargo publish

  python-publish:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - uses: messense/maturin-action@v1
        with:
          maturin-version: latest
          command: build
          args: --release --interpreter python${{matrix.python_version}}

      - name: Install wheels
        if:  matrix.os == 'windows-latest'
        run: pip install --find-links=target\wheels whl

      - name: Install wheels
        if:  matrix.os != 'windows-latest'
        run: pip install target/wheels/*.whl

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/wheels/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: PyPi publish
        if: github.event_name == 'release' && github.event.action == 'created'
        env:
          MATURIN_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: maturin publish --skip-existing -u __token__
